{"ast":null,"code":"var _jsxFileName = \"/home/breno/front-end-bigbangbeer/src/pages/UserProfile/Index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { putNameUser } from '../../services/trybeerUserAPI';\nimport TopMenu from '../../components/TopMenu/Index';\nimport './styles.css';\n\nconst dealWithChange = (setName, setChange, value) => {\n  setName(value);\n  setChange(false);\n};\n\nconst nameInput = (name, setName, setChange, focus, setFocus) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `${focus ? 'focus' : 'txtb'}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  \"data-testid\": \"profile-name-input\",\n  id: \"name\",\n  onChange: event => dealWithChange(setName, setChange, event.target.value),\n  value: name,\n  placeholder: \"nome\",\n  className: \"profile-name-input\",\n  onFocus: () => setFocus(true),\n  onBlur: () => setFocus(false),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n})));\n\nconst emailInput = email => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: \"email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n  type: \"email\",\n  \"data-testid\": \"profile-email-input\",\n  id: \"email\",\n  value: email,\n  placeholder: \"email\",\n  className: \"profile-email-input\",\n  readOnly: \"readonly\",\n  disabled: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n})));\n\nconst saveButton = (clickToSave, isDisabled) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  className: \"profile-save-btn\",\n  \"data-testid\": \"profile-save-btn\",\n  onClick: () => clickToSave(),\n  disabled: isDisabled(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, \"Salvar\"));\n\nfunction UserProfile() {\n  const [name, setName] = useState('');\n  const [email, setEMail] = useState('');\n  const [token, setToken] = useState('');\n  const [focusName, setFocusName] = useState(false);\n  const [message, setMessage] = useState('');\n  const [change, setChange] = useState(true);\n  useEffect(() => {\n    const actualUser = JSON.parse(localStorage.getItem('user'));\n    if (!actualUser) return window.location.assign('http://localhost:3000/login');\n    setName(actualUser.data.name);\n    setEMail(actualUser.data.email);\n    setToken(actualUser.data.token);\n  }, []);\n\n  const clickToSave = async () => {\n    await putNameUser(name, email, token);\n    setChange(!change);\n    setMessage('Atualização concluída com sucesso');\n    setTimeout(() => setMessage(''), 6000);\n  };\n\n  const isDisabled = () => {\n    if (name !== '' && name.length > 11 && !change) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, TopMenu('Meu perfil'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, message), nameInput(name, setName, setChange, focusName, setFocusName), emailInput(email), saveButton(clickToSave, isDisabled)));\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["/home/breno/front-end-bigbangbeer/src/pages/UserProfile/Index.jsx"],"names":["React","useState","useEffect","putNameUser","TopMenu","dealWithChange","setName","setChange","value","nameInput","name","focus","setFocus","event","target","emailInput","email","saveButton","clickToSave","isDisabled","UserProfile","setEMail","token","setToken","focusName","setFocusName","message","setMessage","change","actualUser","JSON","parse","localStorage","getItem","window","location","assign","data","setTimeout","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAO,cAAP;;AAEA,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,SAAV,EAAqBC,KAArB,KAA+B;AACpDF,EAAAA,OAAO,CAACE,KAAD,CAAP;AACAD,EAAAA,SAAS,CAAC,KAAD,CAAT;AACD,CAHD;;AAKA,MAAME,SAAS,GAAG,CAACC,IAAD,EAAOJ,OAAP,EAAgBC,SAAhB,EAA2BI,KAA3B,EAAkCC,QAAlC,kBAChB;AAAK,EAAA,SAAS,EAAI,GAAED,KAAK,GAAG,OAAH,GAAa,MAAO,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAO,EAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AACE,EAAA,IAAI,EAAC,MADP;AAEE,iBAAY,oBAFd;AAGE,EAAA,EAAE,EAAC,MAHL;AAIE,EAAA,QAAQ,EAAIE,KAAD,IAAWR,cAAc,CAACC,OAAD,EAAUC,SAAV,EAAqBM,KAAK,CAACC,MAAN,CAAaN,KAAlC,CAJtC;AAKE,EAAA,KAAK,EAAGE,IALV;AAME,EAAA,WAAW,EAAC,MANd;AAOE,EAAA,SAAS,EAAC,oBAPZ;AAQE,EAAA,OAAO,EAAG,MAAME,QAAQ,CAAC,IAAD,CAR1B;AASE,EAAA,MAAM,EAAG,MAAMA,QAAQ,CAAC,KAAD,CATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbF,CADF,CADF;;AAoBA,MAAMG,UAAU,GAAIC,KAAD,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAO,EAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AACE,EAAA,IAAI,EAAC,OADP;AAEE,iBAAY,qBAFd;AAGE,EAAA,EAAE,EAAC,OAHL;AAIE,EAAA,KAAK,EAAGA,KAJV;AAKE,EAAA,WAAW,EAAC,OALd;AAME,EAAA,SAAS,EAAC,qBANZ;AAOE,EAAA,QAAQ,EAAC,UAPX;AAQE,EAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADF;;AAkBA,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,UAAd,kBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,SAAS,EAAC,kBAFZ;AAGE,iBAAY,kBAHd;AAIE,EAAA,OAAO,EAAG,MAAMD,WAAW,EAJ7B;AAKE,EAAA,QAAQ,EAAGC,UAAU,EALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;;AAcA,SAASC,WAAT,GAAuB;AACrB,QAAM,CAACV,IAAD,EAAOJ,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQK,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2B,MAAD,EAASrB,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAnB;AACA,QAAI,CAACJ,UAAL,EAAiB,OAAOK,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,6BAAvB,CAAP;AACjB9B,IAAAA,OAAO,CAACuB,UAAU,CAACQ,IAAX,CAAgB3B,IAAjB,CAAP;AACAW,IAAAA,QAAQ,CAACQ,UAAU,CAACQ,IAAX,CAAgBrB,KAAjB,CAAR;AACAO,IAAAA,QAAQ,CAACM,UAAU,CAACQ,IAAX,CAAgBf,KAAjB,CAAR;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMJ,WAAW,GAAG,YAAY;AAC9B,UAAMf,WAAW,CAACO,IAAD,EAAOM,KAAP,EAAcM,KAAd,CAAjB;AACAf,IAAAA,SAAS,CAAC,CAACqB,MAAF,CAAT;AACAD,IAAAA,UAAU,CAAC,mCAAD,CAAV;AACAW,IAAAA,UAAU,CAAC,MAAMX,UAAU,CAAC,EAAD,CAAjB,EAAuB,IAAvB,CAAV;AACD,GALD;;AAOA,QAAMR,UAAU,GAAG,MAAM;AACvB,QAAIT,IAAI,KAAK,EAAT,IAAeA,IAAI,CAAC6B,MAAL,GAAc,EAA7B,IAAmC,CAACX,MAAxC,EAAgD;AAC9C,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,OAAO,CAAC,YAAD,CADV,eAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIsB,OAAJ,CADF,EAEGjB,SAAS,CAACC,IAAD,EAAOJ,OAAP,EAAgBC,SAAhB,EAA2BiB,SAA3B,EAAsCC,YAAtC,CAFZ,EAGGV,UAAU,CAACC,KAAD,CAHb,EAIGC,UAAU,CAACC,WAAD,EAAcC,UAAd,CAJb,CAFF,CADF;AAWD;;AAED,eAAeC,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { putNameUser } from '../../services/trybeerUserAPI';\nimport TopMenu from '../../components/TopMenu/Index';\nimport './styles.css';\n\nconst dealWithChange = (setName, setChange, value) => {\n  setName(value);\n  setChange(false);\n};\n\nconst nameInput = (name, setName, setChange, focus, setFocus) => (\n  <div className={ `${focus ? 'focus' : 'txtb'}` }>\n    <label htmlFor=\"name\">\n      Name:\n      <input\n        type=\"text\"\n        data-testid=\"profile-name-input\"\n        id=\"name\"\n        onChange={ (event) => dealWithChange(setName, setChange, event.target.value) }\n        value={ name }\n        placeholder=\"nome\"\n        className=\"profile-name-input\"\n        onFocus={ () => setFocus(true) }\n        onBlur={ () => setFocus(false) }\n      />\n      <span />\n    </label>\n  </div>\n);\n\nconst emailInput = (email) => (\n  <div>\n    <label htmlFor=\"email\">\n      Email:\n      <input\n        type=\"email\"\n        data-testid=\"profile-email-input\"\n        id=\"email\"\n        value={ email }\n        placeholder=\"email\"\n        className=\"profile-email-input\"\n        readOnly=\"readonly\"\n        disabled\n      />\n    </label>\n  </div>\n);\n\nconst saveButton = (clickToSave, isDisabled) => (\n  <div>\n    <button\n      type=\"button\"\n      className=\"profile-save-btn\"\n      data-testid=\"profile-save-btn\"\n      onClick={ () => clickToSave() }\n      disabled={ isDisabled() }\n    >\n      Salvar\n    </button>\n  </div>\n);\n\nfunction UserProfile() {\n  const [name, setName] = useState('');\n  const [email, setEMail] = useState('');\n  const [token, setToken] = useState('');\n  const [focusName, setFocusName] = useState(false);\n  const [message, setMessage] = useState('');\n  const [change, setChange] = useState(true);\n\n  useEffect(() => {\n    const actualUser = JSON.parse(localStorage.getItem('user'));\n    if (!actualUser) return window.location.assign('http://localhost:3000/login');\n    setName(actualUser.data.name);\n    setEMail(actualUser.data.email);\n    setToken(actualUser.data.token);\n  }, []);\n\n  const clickToSave = async () => {\n    await putNameUser(name, email, token);\n    setChange(!change);\n    setMessage('Atualização concluída com sucesso');\n    setTimeout(() => setMessage(''), 6000);\n  };\n\n  const isDisabled = () => {\n    if (name !== '' && name.length > 11 && !change) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div>\n      {TopMenu('Meu perfil')}\n      <div className=\"profile-container\">\n        <p>{message}</p>\n        {nameInput(name, setName, setChange, focusName, setFocusName)}\n        {emailInput(email)}\n        {saveButton(clickToSave, isDisabled)}\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}