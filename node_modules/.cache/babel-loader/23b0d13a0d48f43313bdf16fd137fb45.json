{"ast":null,"code":"var _jsxFileName = \"/home/breno/front-end-bigbangbeer/src/pages/UserOrders/Index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { allSales } from \"../../services/trybeerUserAPI\";\nimport TopMenu from '../../components/TopMenu/Index';\nimport \"./styles.css\";\n\nconst productsCards = (purchase, clickToCart) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"checkout-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, purchase.map((e, index) => {\n  const month = new Date(e.date).getMonth() + 1;\n  const day = new Date(e.date).getUTCDate();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: e.id,\n    onClick: () => clickToCart(index + 1),\n    \"data-testid\": `${index}-order-card-container`,\n    className: \"orders-products-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-order-number`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \"Pedido \", index + 1), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-order-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, `${(\"0\" + day).slice(-2)}/${(\"0\" + month).slice(-2)}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-order-total-value`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"R$ \", parseFloat(e.total).toFixed(2).replace('.', ',')));\n}));\n\nconst itensList = async (actualUser, setPurchase) => {\n  const listSales = await allSales();\n  const actualPurchase = await listSales.data.filter(elem => elem.userId === actualUser.data.id);\n  setPurchase(actualPurchase);\n};\n\nfunction UserOrders() {\n  const [purchase, setPurchase] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const actualUser = JSON.parse(localStorage.getItem('user'));\n    if (!actualUser) return window.location.assign('http://localhost:3000/login');\n    itensList(actualUser, setPurchase);\n  }, []);\n\n  const clickToCart = async id => {\n    history.push(`/orders/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, TopMenu('Meus Pedidos'), productsCards(purchase, clickToCart));\n}\n\nexport default UserOrders;","map":{"version":3,"sources":["/home/breno/front-end-bigbangbeer/src/pages/UserOrders/Index.jsx"],"names":["React","useState","useEffect","useHistory","allSales","TopMenu","productsCards","purchase","clickToCart","map","e","index","month","Date","date","getMonth","day","getUTCDate","id","slice","parseFloat","total","toFixed","replace","itensList","actualUser","setPurchase","listSales","actualPurchase","data","filter","elem","userId","UserOrders","history","JSON","parse","localStorage","getItem","window","location","assign","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { allSales } from \"../../services/trybeerUserAPI\";\nimport TopMenu from '../../components/TopMenu/Index';\nimport \"./styles.css\";\n\nconst productsCards = (purchase, clickToCart) => (\n  <div className=\"checkout-container\">\n    {purchase.map((e, index) => {\n      const month = new Date(e.date).getMonth()+1;\n      const day = new Date(e.date).getUTCDate();\n      return (\n        <div\n          key={e.id}\n          onClick={() => clickToCart((index + 1))}\n          data-testid={`${index}-order-card-container`}\n          className=\"orders-products-card\"\n        >\n          <p data-testid={`${index}-order-number`}>Pedido {(index + 1)}</p>\n          <p data-testid={`${index}-order-date`}>{`${(\"0\" + day).slice(-2)}/${(\"0\" + (month)).slice(-2)}`}</p>\n          <p data-testid={`${index}-order-total-value`}>\n           R$ {parseFloat(e.total).toFixed(2).replace('.', ',')}\n          </p>\n        </div>\n      );\n    })}\n  </div>\n);\n\nconst itensList = async (actualUser, setPurchase) => {\n  const listSales = await allSales();\n  const actualPurchase = await listSales.data.filter((elem) => elem.userId === actualUser.data.id);\n  setPurchase(actualPurchase);\n};\n\nfunction UserOrders() {\n  const [purchase, setPurchase] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const actualUser = JSON.parse(localStorage.getItem('user'));\n    if(!actualUser) return window.location.assign('http://localhost:3000/login');\n    itensList(actualUser, setPurchase);\n  }, []);\n\n  const clickToCart = async (id) => {\n    history.push(`/orders/${id}`);\n  };\n\n  return (\n    <div>\n      {TopMenu('Meus Pedidos')}\n      {productsCards(purchase, clickToCart)}\n    </div>\n  );\n}\n\nexport default UserOrders;\n"]},"metadata":{},"sourceType":"module"}